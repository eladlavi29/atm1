
.global _start

  .section .text

  movq $head, %rax
  cmpq $node_0, 0(%rax)
  jne bad_exit

  /*
  movq $node_0, %rax
  cmpq $225, (%rax)
  jne bad_exit
  cmpq $node_1, 8(%rax)
  jne bad_exit
  */


  movq $60, %rax
  movq $0, %rdi
  syscall

bad_exit:
  movq $60, %rax
  movq $1, %rdi
  syscall

.section .data
  head:
            .quad node_0
  node_0:
            .quad 1
            .quad node_1
  node_1:
            .quad 2
            .quad 0
  
  Source: .quad node_0
  val: .int 858



/*
.global _start

.section .text

  mov head(%rip), %rax
  cmpl $2, (%rax)
  jne bad_exit
  
  mov 4(%rax), %rax
  cmpl $1, (%rax)
  jne bad_exit
  
  movq $60, %rax
  movq $0, %rdi
  syscall

bad_exit:
  movq $60, %rax
  movq $1, %rdi
  syscall

.section .data
B: .int 2
.quad 0

A: .int 1
.quad B

head: .quad A

Source: .quad B

val: .int 1
*/